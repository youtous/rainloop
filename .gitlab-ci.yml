image: docker:latest

stages:
  - build
  - test
  - push

services:
  - docker:dind

before_script:
  # docker login asks for the password to be passed through stdin for security
  # we use $CI_JOB_TOKEN here which is a special token provided by GitLab
  - echo -n $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

# build the image and push it on gitlab registry
build:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  only:
    - master # comment if you wanna CI any of the branches

# push "latest" image to the registry
release-latest:
  variables:
    GIT_STRATEGY: none # don't pull sourcecode
  stage: push
  only:
    - master # latest from master only
  script:
    # pull image from registry, tag it then push
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

# push "tagged" image to the registry
release-tag:
  variables:
    GIT_STRATEGY: none # don't pull sourcecode
  stage: push
  # only start a release on tags of master (not other branches)
  only:
    - tags # latest from master only
  except:
    - branches
  script:
    # pull image from registry, tag it then push
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG